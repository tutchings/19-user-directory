[{"C:\\Users\\tutch\\Desktop\\UNC_Coding_Bootcamp\\Homework\\19-user-directory\\src\\index.js":"1","C:\\Users\\tutch\\Desktop\\UNC_Coding_Bootcamp\\Homework\\19-user-directory\\src\\reportWebVitals.js":"2","C:\\Users\\tutch\\Desktop\\UNC_Coding_Bootcamp\\Homework\\19-user-directory\\src\\App.js":"3","C:\\Users\\tutch\\Desktop\\UNC_Coding_Bootcamp\\Homework\\19-user-directory\\src\\components\\UserDirectory.js":"4","C:\\Users\\tutch\\Desktop\\UNC_Coding_Bootcamp\\Homework\\19-user-directory\\src\\components\\Jumbotron.js":"5","C:\\Users\\tutch\\Desktop\\UNC_Coding_Bootcamp\\Homework\\19-user-directory\\src\\components\\Table.js":"6","C:\\Users\\tutch\\Desktop\\UNC_Coding_Bootcamp\\Homework\\19-user-directory\\src\\components\\HorizontalRule.js":"7","C:\\Users\\tutch\\Desktop\\UNC_Coding_Bootcamp\\Homework\\19-user-directory\\src\\utils\\API.js":"8"},{"size":547,"mtime":1611693132165,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1611693132216,"results":"11","hashOfConfig":"10"},{"size":152,"mtime":1611693132094,"results":"12","hashOfConfig":"10"},{"size":8179,"mtime":1611693132384,"results":"13","hashOfConfig":"10"},{"size":464,"mtime":1611693132324,"results":"14","hashOfConfig":"10"},{"size":961,"mtime":1611693132352,"results":"15","hashOfConfig":"10"},{"size":183,"mtime":1611693132296,"results":"16","hashOfConfig":"10"},{"size":214,"mtime":1611693132416,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"89q8v1",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"C:\\Users\\tutch\\Desktop\\UNC_Coding_Bootcamp\\Homework\\19-user-directory\\src\\index.js",[],["37","38"],"C:\\Users\\tutch\\Desktop\\UNC_Coding_Bootcamp\\Homework\\19-user-directory\\src\\reportWebVitals.js",[],"C:\\Users\\tutch\\Desktop\\UNC_Coding_Bootcamp\\Homework\\19-user-directory\\src\\App.js",[],"C:\\Users\\tutch\\Desktop\\UNC_Coding_Bootcamp\\Homework\\19-user-directory\\src\\components\\UserDirectory.js",["39","40","41","42","43","44","45","46","47","48"],"import React, { Component } from \"react\";\n// import Container from \"./Container\";\nimport Jumbotron from \"./Jumbotron\";\nimport HorizontalRule from \"./HorizontalRule\";\nimport Table from \"./Table\";\nimport API from \"../utils/API\";\n\nclass UserDirectory extends Component {\n    state = {\n        result: [],\n        filteredResult: [],\n        search: ''\n    };\n\n    componentDidMount() {\n        this.searchUsers();\n    };\n\n    searchUsers = () => {\n        API.search()\n            .then(res => {\n                this.setState({ result: res.data.results });\n                this.setState({ filteredResult: res.data.results });\n                console.log(this.state.result);\n            })\n            .catch(err => console.log(err));\n    }\n\n    handleInputChange = event => {\n\n        const { name, value } = event.target;\n\n        this.setState({\n            [name]: value\n        });\n\n        let filtered = this.state.result.filter(obj => {\n            if (obj.name.first.toLowerCase().includes(value.toLowerCase()) || obj.name.last.toLowerCase().includes(value.toLowerCase())) {\n                return obj;\n            }\n        })\n\n        // console.log('result: ', this.state.result);\n\n        // console.log('filtered: ', filtered)\n\n        this.setState({ filteredResult: filtered });\n\n        // console.log('search: ', this.state.search);\n    };\n\n    handleSort = event => {\n        console.log(event.target.name)\n        switch(event.target.name) {\n\n            case 'firstNameAscend':\n\n                let firstAscend = this.state.filteredResult;\n\n                firstAscend.sort((a, b) => {\n                    let nameA = a.name.first.toLowerCase();\n                    let nameB = b.name.first.toLowerCase();\n\n                    if (nameA < nameB) {\n                        return -1;\n                    }\n                    if (nameA > nameB) {\n                        return 1;\n                    }\n                    return 0;\n                })\n\n                this.setState({ filteredResult: firstAscend })\n                break;\n\n            case 'firstNameDescend':\n\n                let firstDescend = this.state.filteredResult;\n\n                firstDescend.sort((a, b) => {\n                    let nameA = a.name.first.toLowerCase();\n                    let nameB = b.name.first.toLowerCase();\n\n                    if (nameA < nameB) {\n                        return 1;\n                    }\n                    if (nameA > nameB) {\n                        return -1;\n                    }\n                    return 0;\n                })\n\n                this.setState({ filteredResult: firstDescend })\n                break;\n\n            case 'lastNameAscend':\n\n                let lastAscend = this.state.filteredResult;\n\n                lastAscend.sort((a, b) => {\n                    let nameA = a.name.last.toLowerCase();\n                    let nameB = b.name.last.toLowerCase();\n\n                    if (nameA < nameB) {\n                        return -1;\n                    }\n                    if (nameA > nameB) {\n                        return 1;\n                    }\n                    return 0;\n                })\n\n                this.setState({ filteredResult: lastAscend })\n                break;\n\n            case 'lastNameDescend':\n\n                let lastDescend = this.state.filteredResult;\n\n                lastDescend.sort((a, b) => {\n                    let nameA = a.name.last.toLowerCase();\n                    let nameB = b.name.last.toLowerCase();\n\n                    if (nameA < nameB) {\n                        return 1;\n                    }\n                    if (nameA > nameB) {\n                        return -1;\n                    }\n                    return 0;\n                })\n\n                this.setState({ filteredResult: lastDescend })\n                break;\n\n            case 'emailAscend':\n\n                let emailAscend = this.state.filteredResult;\n\n                emailAscend.sort((a, b) => {\n                    let nameA = a.email.toLowerCase();\n                    let nameB = b.email.toLowerCase();\n\n                    if (nameA < nameB) {\n                        return -1;\n                    }\n                    if (nameA > nameB) {\n                        return 1;\n                    }\n                    return 0;\n                })\n\n                this.setState({ filteredResult: emailAscend })\n                break;\n\n            case 'emailDescend':\n\n                let emailDescend = this.state.filteredResult;\n\n                emailDescend.sort((a, b) => {\n                    let nameA = a.email.toLowerCase();\n                    let nameB = b.email.toLowerCase();\n\n                    if (nameA < nameB) {\n                        return 1;\n                    }\n                    if (nameA > nameB) {\n                        return -1;\n                    }\n                    return 0;\n                })\n\n                this.setState({ filteredResult: emailDescend })\n                break;\n            \n            case 'dobAscend':\n                \n                let dobAscend = this.state.filteredResult;\n\n                dobAscend.sort((a, b) => {\n                    let dobA = a.dob.date.slice(0,10);\n                    \n\n                    let dobB = b.dob.date.slice(0,10);\n                    \n\n                    if (dobA < dobB) {\n                        return -1;\n                    }\n                    if (dobA > dobB) {\n                        return 1;\n                    }\n                    return 0;\n                })\n\n                this.setState({ filteredResult: dobAscend })\n                break;\n\n            case 'dobDescend':\n                \n                let dobDescend = this.state.filteredResult;\n\n                dobDescend.sort((a, b) => {\n                    let dobA = a.dob.date.slice(0,10);\n                    \n\n                    let dobB = b.dob.date.slice(0,10);\n                    \n\n                    if (dobA < dobB) {\n                        return 1;\n                    }\n                    if (dobA > dobB) {\n                        return -1;\n                    }\n                    return 0;\n                })\n\n                this.setState({ filteredResult: dobDescend })\n                break;\n\n        }\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Jumbotron />\n                <div className=\"input-group mb-3\">\n                    <span className=\"input-group-text\" id=\"basic-addon1\">Search</span>\n                    <input value={this.state.search} type=\"text\" className=\"form-control\" name='search' onChange={this.handleInputChange} />\n                    <button className=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">SORT</button>\n                    <ul class=\"dropdown-menu dropdown-menu-end\">\n                        <li><a onClick={this.handleSort} name=\"firstNameAscend\" class=\"dropdown-item\" href=\"#\">First Name (a-z)</a></li>\n                        <li><a onClick={this.handleSort} name=\"firstNameDescend\" class=\"dropdown-item\" href=\"#\">First Name (z-a)</a></li>\n                        <li><a onClick={this.handleSort} name=\"lastNameAscend\" class=\"dropdown-item\" href=\"#\">Last Name (a-z)</a></li>\n                        <li><a onClick={this.handleSort} name=\"lastNameDescend\" class=\"dropdown-item\" href=\"#\">Last Name (z-a)</a></li>\n                        <li><a onClick={this.handleSort} name=\"emailAscend\" class=\"dropdown-item\" href=\"#\">Email (a-z)</a></li>\n                        <li><a onClick={this.handleSort} name=\"emailDescend\" class=\"dropdown-item\" href=\"#\">Email (z-a)</a></li>\n                        <li><a onClick={this.handleSort} name=\"dobAscend\" class=\"dropdown-item\" href=\"#\">DOB (Ascending)</a></li>\n                        <li><a onClick={this.handleSort} name=\"dobDescend\" class=\"dropdown-item\" href=\"#\">DOB (Descending)</a></li>\n                    </ul>\n                </div>\n                <HorizontalRule />\n                <Table filteredResults={this.state.filteredResult} />\n            </div>   \n        );\n    }\n}\n\nexport default UserDirectory;","C:\\Users\\tutch\\Desktop\\UNC_Coding_Bootcamp\\Homework\\19-user-directory\\src\\components\\Jumbotron.js",[],"C:\\Users\\tutch\\Desktop\\UNC_Coding_Bootcamp\\Homework\\19-user-directory\\src\\components\\Table.js",[],"C:\\Users\\tutch\\Desktop\\UNC_Coding_Bootcamp\\Homework\\19-user-directory\\src\\components\\HorizontalRule.js",[],"C:\\Users\\tutch\\Desktop\\UNC_Coding_Bootcamp\\Homework\\19-user-directory\\src\\utils\\API.js",["49"],"import axios from \"axios\";\nconst URL = 'https://randomuser.me/api/?seed=foobar&results=50&inc=picture,name,phone,email,dob&nat=us';\n\nexport default {\n    search: function() {\n        return axios.get(URL);\n    }\n};",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":37,"column":53,"nodeType":"56","messageId":"57","endLine":37,"endColumn":55},{"ruleId":"58","severity":1,"message":"59","line":54,"column":9,"nodeType":"60","messageId":"61","endLine":222,"endColumn":10},{"ruleId":"62","severity":1,"message":"63","line":235,"column":29,"nodeType":"64","endLine":235,"endColumn":112},{"ruleId":"62","severity":1,"message":"63","line":236,"column":29,"nodeType":"64","endLine":236,"endColumn":113},{"ruleId":"62","severity":1,"message":"63","line":237,"column":29,"nodeType":"64","endLine":237,"endColumn":111},{"ruleId":"62","severity":1,"message":"63","line":238,"column":29,"nodeType":"64","endLine":238,"endColumn":112},{"ruleId":"62","severity":1,"message":"63","line":239,"column":29,"nodeType":"64","endLine":239,"endColumn":108},{"ruleId":"62","severity":1,"message":"63","line":240,"column":29,"nodeType":"64","endLine":240,"endColumn":109},{"ruleId":"62","severity":1,"message":"63","line":241,"column":29,"nodeType":"64","endLine":241,"endColumn":106},{"ruleId":"62","severity":1,"message":"63","line":242,"column":29,"nodeType":"64","endLine":242,"endColumn":107},{"ruleId":"65","severity":1,"message":"66","line":4,"column":1,"nodeType":"67","endLine":8,"endColumn":3},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]